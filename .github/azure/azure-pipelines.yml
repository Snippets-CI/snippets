# Docker
# Build and push images to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- azure

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e2c2a7e3-b882-40a7-bb27-ef2d499446d7'
  imageRepository: 'snippets'
  containerRegistry: 'snippetscontainerregistry.azurecr.io'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Azure für Bildungseinrichtungen(f326e4c7-7827-4649-b4b1-e0719f776b2e)'
        azureContainerRegistry: '{"loginServer":"snippetscontainerregistry.azurecr.io", "id" : "/subscriptions/f326e4c7-7827-4649-b4b1-e0719f776b2e/resourceGroups/Snippets-RG/providers/Microsoft.ContainerRegistry/registries/SnippetsContainerRegistry"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'
        additionalImageTags: '$(Build.BuildId)'
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Azure für Bildungseinrichtungen(f326e4c7-7827-4649-b4b1-e0719f776b2e)'
        azureContainerRegistry: '{"loginServer":"snippetscontainerregistry.azurecr.io", "id" : "/subscriptions/f326e4c7-7827-4649-b4b1-e0719f776b2e/resourceGroups/Snippets-RG/providers/Microsoft.ContainerRegistry/registries/SnippetsContainerRegistry"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
        additionalImageTags: '$(Build.BuildId)'
    - task: CopyFiles@2
      displayName: 'Copy Files'
      inputs:
        Contents: |
          **/.github/azure/k8s_deployment.yaml
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'deploy'
        publishLocation: 'Container'
- stage: Deploy
  displayName: Deploy to kubernetes
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'snippets-k8s-service-connection'
        namespace: 'default'
        strategy: 'canary'
        percentage: '100'
        manifests: './.github/azure/k8s_deployment.yaml'
        containers: 'snippets_restapi:$(Build.BuildId)'